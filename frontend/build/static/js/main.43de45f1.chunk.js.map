{"version":3,"sources":["store/store.js","store/reducers/productReducers.js","store/constants/productContstants.js","store/reducers/cartReducers.js","store/constants/cartConstants.js","store/reducers/userReducers.js","store/constants/userContstants.js","store/reducers/orderReducers.js","store/constants/orderConstants.js","store/actions/userActions.js","components/SearchBox/index.js","components/Header/index.js","components/Footer/index.js","components/ScrollToTop/index.js","store/actions/productActions.js","components/Rating/index.js","components/Product/index.js","components/Message/index.js","components/Loader/index.js","components/Paginate/index.js","components/ProductCarousel/index.js","components/Meta/index.js","screens/HomeScreen/index.js","screens/ProductScreen/index.js","store/actions/cartActions.js","screens/CartScreen/index.js","components/FormContainer/index.js","screens/LoginScreen/index.js","screens/RegisterScreen/index.js","screens/ProfileScreen/index.js","store/actions/orderActions.js","components/CheckoutSteps/index.js","screens/ShippingScreen/index.js","screens/PaymentScreen/index.js","screens/PlaceOrderScreen/index.js","screens/OrderScreen/index.js","screens/UserListScreen/index.js","screens/UserEditScreen/index.js","screens/ProductListScreen/index.js","screens/ProductEditScreen/index.js","screens/OrderListScreen/index.js","App.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","Row","Col","Control","name","onChange","target","value","placeholder","Button","variant","className","withRouter","props","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","href","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","listProducts","pageNumber","listProductDetails","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","varian","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","ProductCarousel","Carousel","pause","Image","alt","fluid","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","m2","lg","xl","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","md","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","OrderListScreen","App","path","component","ProductScreen","exact","ReactDOM","getElementById"],"mappings":"6OAgCMA,EAAUC,0BAAgB,CAC9BC,YCNgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,IC7BgC,uBD8B9B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC9BgC,uBD+B9B,MAAO,CACLG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,ICpC6B,oBDqC3B,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDPXS,eCWmC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,IC9CmC,0BD+CjC,OAAO,aAAEC,SAAS,GAASJ,GAC7B,IC/CmC,0BDgDjC,MAAO,CAAEI,SAAS,EAAOM,QAASR,EAAOG,SAC3C,IChDgC,uBDiD9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDtBXY,cCyBkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICtDkC,yBDuDhC,MAAO,CAAEC,SAAS,GACpB,ICvDkC,yBDwDhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICxD+B,sBDyD7B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDjCXc,cCqCkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IC/DkC,yBDgEhC,MAAO,CAAEC,SAAS,GACpB,IChEkC,yBDiEhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,ICjE+B,sBDkE7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IClEgC,uBDmE9B,MAAO,GACT,QACE,OAAOL,ID/CXe,cCmDkC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,ICzEkC,yBD0EhC,MAAO,CAAEC,SAAS,GACpB,IC1EkC,yBD2EhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IC3E+B,sBD4E7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC5EgC,uBD6E9B,MAAO,CAAEK,QAAS,IACpB,QACE,OAAOV,ID7DXgB,oBCiEwC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICnFyC,gCDoFvC,MAAO,CAAEC,SAAS,GACpB,ICpFyC,gCDqFvC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICrFsC,6BDsFpC,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICtFuC,8BDuFrC,MAAO,GACT,QACE,OAAOL,ID3EXiB,gBC+EoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,IC7F+B,sBD8F7B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC9F+B,sBD+F7B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,IC/F4B,mBDgG1B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDvFXkB,KGjCyB,WAGrB,IAFJlB,EAEG,uDAFK,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACG,uCACH,OAAQA,EAAOC,MACb,ICZyB,gBDavB,IAAMkB,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAEd,UAAYW,EAAKX,WAEjE,OAAIY,EACK,2BACFtB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAItC,2BACFxB,GADL,IAEEmB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAGtC,IC5B4B,mBD6B1B,OAAO,2BACFrB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAElE,IChCsC,6BDiCpC,OAAO,2BACFL,GADL,IAEEoB,gBAAiBlB,EAAOG,UAE5B,ICpCoC,2BDqClC,OAAO,2BACFL,GADL,IAEE2B,cAAezB,EAAOG,UAE1B,QACE,OAAOL,IHJX4B,UKb8B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,IC9B8B,qBD+B5B,MAAO,CAAEC,SAAS,GACpB,IC/B8B,qBDgC5B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IChC2B,kBDiCzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICjCuB,cDkCrB,MAAO,GACT,QACE,OAAOL,ILGX8B,aKCiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICxCiC,wBDyC/B,MAAO,CAAEC,SAAS,GACpB,ICzCiC,wBD0C/B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IC1C8B,qBD2C5B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ILTX+B,YKagC,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAClE,OAAQA,EAAOC,MACb,ICjDgC,uBDkD9B,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,IClDgC,uBDmD9B,MAAO,CAAEA,SAAS,EAAO4B,KAAM9B,EAAOG,SACxC,ICnD6B,oBDoD3B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICpD8B,qBDqD5B,MAAO,CAAE2B,KAAM,IACjB,QACE,OAAOhC,ILvBXiC,kBK2BsC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IC3DuC,8BD4DrC,MAAO,CAAEC,SAAS,GACpB,IC5DuC,8BD6DrC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC3D,IC7DoC,2BD8DlC,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ILnCXkC,SKuC6B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICnE6B,oBDoE3B,MAAO,CAAEC,SAAS,GACpB,ICpE6B,oBDqE3B,MAAO,CAAEA,SAAS,EAAO+B,MAAOjC,EAAOG,SACzC,ICrE0B,iBDsExB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICtE2B,kBDuEzB,MAAO,CAAE8B,MAAO,IAClB,QACE,OAAOnC,ILjDXoC,WKoD+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,IC5E+B,sBD6E7B,MAAO,CAAEC,SAAS,GACpB,IC7E+B,sBD8E7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,IC9E4B,mBD+E1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IL5DXqC,WK+D+B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACjE,OAAQA,EAAOC,MACb,ICpF+B,sBDqF7B,MAAO,CAAEC,SAAS,GACpB,ICrF+B,sBDsF7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICtF4B,mBDuF1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICvF6B,oBDwF3B,MAAO,CAAE2B,KAAM,IACjB,QACE,OAAOhC,ILzEXsC,YOxBgC,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,IC1BgC,uBD2B9B,MAAO,CACLC,SAAS,GAEb,IC7BgC,uBD8B9B,MAAO,CACLA,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAElB,IClC6B,oBDmC3B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPOXwC,aOHiC,WAG7B,IAFJxC,EAEG,uDAFK,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAC1DlB,EACG,uCACH,OAAQA,EAAOC,MACb,IC/CiC,wBDgD/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAEb,ICnDiC,wBDoD/B,MAAO,CACLA,SAAS,EACTmC,MAAOrC,EAAOG,SAElB,ICvD8B,qBDwD5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPjBX0C,SOqB6B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICjE6B,oBDkE3B,MAAO,CACLC,SAAS,GAEb,ICpE6B,oBDqE3B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,ICxE0B,iBDyExB,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,IC5E2B,kBD6EzB,MAAO,GACT,QACE,OAAOL,IPvCX2C,aO0CiC,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICzEiC,wBD0E/B,MAAO,CACLC,SAAS,GAEb,IC5EiC,wBD6E/B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,IChF8B,qBDiF5B,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,ICpF+B,sBDqF7B,MAAO,GACT,QACE,OAAOL,IP5DX4C,YO+DgC,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACpE,OAAQA,EAAOC,MACb,ICxGiC,wBDyG/B,MAAO,CACLC,SAAS,GAEb,IC3GiC,wBD4G/B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,IC/G8B,qBDgH5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,ICnH+B,sBDoH7B,MAAO,CACLwC,OAAQ,IAEZ,QACE,OAAO7C,IPnFX8C,UOsF8B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACb,IC3H8B,qBD4H5B,MAAO,CACLC,SAAS,GAEb,IC9H8B,qBD+H5B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,IClI2B,kBDmIzB,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAGlB,QACE,OAAOL,MPrGP+C,EAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACEG,EAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAKEI,EAAe,CACnBnC,KAAM,CACJC,UAAW4B,EACX3B,gBAP+B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOFrB,UAAW,CAAEC,SAAUuB,IAGnBE,EAAa,CAACC,KAQLC,EANDC,sBACZ5D,EACAwD,EACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,K,0HS8B5BM,EAAiB,SAACC,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACP3D,KHvG8B,yBGoGE,EAQ9B4D,IADWlC,EAPmB,EAOhCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbJ,SAiBXC,IAAMC,IAAN,qBAAwBT,GAAMI,GAjBnB,gBAiB1BM,EAjB0B,EAiB1BA,KACRT,EAAS,CACP3D,KHtH8B,uBGuH9BE,QAASkE,IApBuB,kDAuBlCT,EAAS,CACP3D,KH1H2B,oBG2H3BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BoB,0DAAR,yD,yCCvEfC,EAlCG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBAC1BC,EAD0B,KACjBC,EADiB,KAYjC,OACE,kBAACC,EAAA,EAAD,CAAMC,SAVc,SAACC,GACrBA,EAAEC,iBACEL,EAAQM,OACVR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,OAMb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACP,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLqF,KAAK,IACLC,SAAU,SAACR,GAAD,OAAOH,EAAWG,EAAES,OAAOC,QACrCC,YAAY,wBAIhB,kBAACN,EAAA,EAAD,KACE,kBAACO,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,oBAAoBC,UAAU,OAA5D,cCgDKC,eAhEA,SAACC,GAAW,IACjBtB,EAAYsB,EAAZtB,QACFb,EAAWoC,cAETrE,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAOR,OACE,gCACE,kBAACuE,EAAA,EAAD,CAAQC,GAAG,OAAOP,QAAQ,OAAOQ,OAAO,KAAKC,kBAAgB,GAC3D,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACL,EAAA,EAAOM,MAAR,iBAEF,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBhD,GAAG,oBAClB,kBAAC,IAAD,CAAOiD,OAAQ,gBAAGnC,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,OACpD,kBAACoC,EAAA,EAAD,CAAKhB,UAAU,WACb,kBAAC,gBAAD,CAAeU,GAAG,SAChB,kBAACM,EAAA,EAAIC,KAAL,KACE,uBAAGjB,UAAU,yBADf,UAIDlE,EACC,kBAACoF,EAAA,EAAD,CAAaC,MAAOrF,EAAS2D,KAAM3B,GAAG,YACpC,kBAAC,gBAAD,CAAe4C,GAAG,YAChB,kBAACQ,EAAA,EAAYE,KAAb,iBAEF,kBAACF,EAAA,EAAYE,KAAb,CAAkBC,QA1BZ,WACpBtD,GF0CwB,SAACA,GAC3Bd,aAAaqE,WAAW,YACxBrE,aAAaqE,WAAW,aACxBrE,aAAaqE,WAAW,mBACxBvD,EAAS,CAAE3D,KH/Dc,gBGgEzB2D,EAAS,CAAE3D,KHvDqB,uBGwDhC2D,EAAS,CAAE3D,KDpDsB,wBCqDjC2D,EAAS,CAAE3D,KH/CkB,uBKD3BwE,EAAQS,KAAK,OAwBC,WAKF,kBAAC,gBAAD,CAAeqB,GAAG,UAChB,kBAACM,EAAA,EAAIC,KAAL,KACE,uBAAGjB,UAAU,gBADf,aAKHlE,GAAYA,EAASyF,SACpB,kBAACL,EAAA,EAAD,CAAaC,MAAM,QAAQrD,GAAG,aAC5B,kBAAC,gBAAD,CAAe4C,GAAG,mBAChB,kBAACQ,EAAA,EAAYE,KAAb,eAEF,kBAAC,gBAAD,CAAeV,GAAG,sBAChB,kBAACQ,EAAA,EAAYE,KAAb,kBAEF,kBAAC,gBAAD,CAAeV,GAAG,oBAChB,kBAACQ,EAAA,EAAYE,KAAb,yBChDLI,EAdA,WACb,OACE,gCACE,kBAACf,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKS,UAAU,oBAAf,uBACwB,uBAAGyB,KAAK,uBAAR,qBCEnBC,EARK,WAAO,IACjBC,EAAaC,cAAbD,SAIR,OAHAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IACG,MCiBIK,EAAe,eAAClD,EAAD,uDAAW,GAAImD,EAAf,uDAA4B,GAA5B,8CAAmC,WAC7DlE,GAD6D,iBAAAE,EAAA,sEAI3DF,EAAS,CAAE3D,KZ7BqB,yBYyB2B,SAKpCkE,IAAMC,IAAN,gCACIO,EADJ,uBAC0BmD,IANU,gBAKnDzD,EALmD,EAKnDA,KAGRT,EAAS,CACP3D,KZjC8B,uBYkC9BE,QAASkE,IAVgD,gDAa3DT,EAAS,CACP3D,KZrC2B,oBYsC3BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlB6C,yDAAnC,uDAsBfwD,EAAqB,SAACpE,GAAD,8CAAQ,WAAOC,GAAP,iBAAAE,EAAA,sEAEtCF,EAAS,CAAE3D,KZ7CwB,4BY2CG,SAGfkE,IAAMC,IAAN,wBAA2BT,IAHZ,gBAG9BU,EAH8B,EAG9BA,KACRT,EAAS,CACP3D,KZ/CiC,0BYgDjCE,QAASkE,IAN2B,gDAStCT,EAAS,CACP3D,KZnD8B,uBYoD9BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAdwB,yDAAR,uD,SC5C5ByD,EAAS,SAAC,GAA4B,IAA1BvC,EAAyB,EAAzBA,MAAOwC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,yBAAKrC,UAAU,UACb,8BACE,uBACEsC,MAAO,CAAED,SACTrC,UACEJ,GAAS,EACL,cACAA,GAAS,GACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACTrC,UACEJ,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACTrC,UACEJ,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACTrC,UACEJ,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACE0C,MAAO,CAAED,SACTrC,UACEJ,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BAAOwC,GAAQA,KAIrBD,EAAOI,aAAe,CACpBF,MAAO,WAQMF,QClDAK,EAxBC,SAAC,GAAiB,IAAf7H,EAAc,EAAdA,QACjB,OACE,kBAAC8H,EAAA,EAAD,CAAMzC,UAAU,qBACd,kBAAC,OAAD,CAAMU,GAAE,mBAAc/F,EAAQ+H,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKjI,EAAQkI,MAAOC,OAAO,SAEvC,kBAACL,EAAA,EAAKM,KAAN,KACE,kBAAC,OAAD,CAAMrC,GAAE,mBAAc/F,EAAQ+H,MAC5B,kBAACD,EAAA,EAAKO,MAAN,CAAYC,GAAG,OACb,gCAAStI,EAAQ8E,QAGrB,kBAACgD,EAAA,EAAKS,KAAN,CAAWD,GAAG,OACZ,kBAAC,EAAD,CACErD,MAAOjF,EAAQwI,OACff,KAAI,UAAKzH,EAAQyI,WAAb,eAGR,kBAACX,EAAA,EAAKS,KAAN,CAAWD,GAAG,MAAd,IAAqBtI,EAAQ0I,U,SCpB/BC,EAAU,SAAC,GAA2B,IAAzBvD,EAAwB,EAAxBA,QAASwD,EAAe,EAAfA,SAC1B,OAAO,kBAACC,EAAA,EAAD,CAAOzD,QAASA,GAAUwD,IAEnCD,EAAQf,aAAe,CAAExC,QAAS,QAEnBuD,Q,SCYAG,EAjBA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLtB,MAAO,CACLuB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,UAGX,0BAAMhE,UAAU,WAAhB,gB,SCYSiE,EAvBE,SAAC,GAAqD,IAAnD1J,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,KAA2C,IAArC+G,eAAqC,aAApBzC,eAAoB,MAAV,IAAU,EACpE,OACEvE,EAAQ,GACN,kBAAC2J,EAAA,EAAD,KACG,YAAIC,MAAM5J,GAAO6J,QAAQ1I,KAAI,SAACD,GAAD,OAC5B,kBAAC,gBAAD,CACE4I,IAAK5I,EAAI,EACTiF,GACGa,EAAD,6BAI0B9F,EAAI,GAH1BqD,EAAO,kBACMA,EADN,iBACsBrD,EAAI,GAD1B,gBAEIA,EAAI,IAIrB,kBAACyI,EAAA,EAAW9C,KAAZ,CAAiBkD,OAAQ7I,EAAI,IAAMjB,GAAOiB,EAAI,S,oBCsB3C8I,GA9BS,WACtB,IAAMxG,EAAWoC,cACXjF,EAAkBkF,aAAY,SAACnG,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAKxB,OAHA2H,qBAAU,WACR9D,ENiL2B,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,sEAEjCF,EAAS,CACP3D,KZ1K6B,wBYuKE,SAMVkE,IAAMC,IAAI,qBANA,gBAMzBC,EANyB,EAMzBA,KAERT,EAAS,CACP3D,KZ/K6B,sBYgL7BE,QAASkE,IAVsB,gDAajCT,EAAS,CACP3D,KZnL0B,mBYoL1BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlBmB,yDAAN,yDMhL1B,CAACX,IACG1D,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAAC+J,GAAA,EAAD,CAAUC,MAAM,QAAQzE,UAAU,WAC/B9F,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAAC6J,GAAA,EAASpD,KAAV,CAAeiD,IAAK1J,EAAQ+H,KAC1B,kBAAC,OAAD,CAAMhC,GAAE,mBAAc/F,EAAQ+H,MAM5B,kBAACgC,GAAA,EAAD,CAAO9B,IAAKjI,EAAQkI,MAAO8B,IAAKhK,EAAQ8E,KAAMmF,OAAK,W,SC9BzDC,GAAO,SAAC,GAAsC,IAApC1D,EAAmC,EAAnCA,MAAO2D,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,kBAACC,GAAA,EAAD,KACE,+BAAQ7D,GACR,0BAAM1B,KAAK,cAAcwF,QAASH,IAClC,0BAAMrF,KAAK,UAAUwF,QAASF,MAIpCF,GAAKtC,aAAe,CAClBpB,MAAO,sBAGM0D,UC+CAK,GAhDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdrG,EAAUqG,EAAMC,OAAOtG,QAEvBmD,EAAakD,EAAMC,OAAOnD,YAAc,EACxClE,EAAWoC,cAEXnG,EAAcoG,aAAY,SAACnG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAMxC,OAJAsH,qBAAU,WACR9D,EAASiE,EAAalD,EAASmD,MAC9B,CAAClE,EAAUe,EAASmD,IAGrB,oCACE,kBAAC,GAAD,MACEnD,EAGA,kBAAC,OAAD,CAAM4B,GAAG,IAAIV,UAAU,iBAAvB,WAFA,kBAAC,GAAD,MAMF,+CACC3F,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAAC,WAAD,KACE,kBAAC6E,EAAA,EAAD,KACGpF,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAAC4E,EAAA,EAAD,CAAK8E,IAAK1J,EAAQ+H,IAAK2C,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,EAAD,CAAS7K,QAASA,SAIxB,kBAAC,EAAD,CACEJ,MAAOA,EACPC,KAAMA,EACNsE,QAASA,GAAoB,Q,UCwJ1B0D,GA7LC,SAAC,GAAwB,IAAtB5D,EAAqB,EAArBA,QAASuG,EAAY,EAAZA,MAAY,EAChBtG,mBAAS,GADO,mBAC/B4G,EAD+B,KAC1BC,EAD0B,OAEV7G,mBAAS,GAFC,mBAE/BsE,EAF+B,KAEvBwC,EAFuB,OAGR9G,mBAAS,IAHD,mBAG/B+G,EAH+B,KAGtBC,EAHsB,KAKhC9H,EAAWoC,cAEXzF,EAAiB0F,aAAY,SAACnG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBM,EAAsBmF,aAAY,SAACnG,GAAD,OAAWA,EAAMgB,uBACxC6K,EACf7K,EADMH,QAAsCiL,EAC5C9K,EADqCR,MAI/BqB,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAER+F,qBAAU,WACJiE,IACFE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACX9H,EAAS,CAAE3D,KrBf0B,iCqBiBvC2D,EAASmE,EAAmBiD,EAAMC,OAAOtH,OACxC,CAACC,EAAUoH,EAAOW,IAUrB,OACE,oCACE,kBAAC,OAAD,CAAM9F,UAAU,qBAAqBU,GAAG,KAAxC,WAGCrG,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,oCACE,kBAAC,GAAD,CAAM0G,MAAOxG,EAAQ8E,OACrB,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACvB,GAAA,EAAD,CAAO9B,IAAKjI,EAAQkI,MAAO8B,IAAKhK,EAAQ8E,KAAMmF,OAAK,KAGrD,kBAACrF,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACxD,EAAA,EAAD,KACE,kBAACyD,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACE,oCAAU5E,EAAQ0I,UAIxB,kBAAC6C,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,KACG5E,EAAQwL,aAAe,EAAI,WAAa,kBAI9CxL,EAAQwL,aAAe,GACtB,kBAACD,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KACE,kBAACP,EAAA,EAAKQ,QAAN,CACEyD,GAAG,SACHrD,MAAO6F,EACP/F,SAAU,SAACR,GAAD,OAAOwG,EAAOxG,EAAES,OAAOC,SAEhC,YAAIuE,MAAMxJ,EAAQwL,cAAc/B,QAAQ1I,KACvC,SAACD,GAAD,OACE,4BAAQ4I,IAAK5I,EAAI,EAAGmE,MAAOnE,EAAI,GAC5BA,EAAI,UASrB,kBAACyK,GAAA,EAAU9E,KAAX,KACE,kBAACtB,EAAA,EAAD,CACEuB,QApEK,WACvBzC,EAAQS,KAAR,gBAAsB8F,EAAMC,OAAOtH,GAAnC,gBAA6C2H,KAoE3BzF,UAAU,YACV5F,KAAK,SACLgM,SAAmC,IAAzBzL,EAAQwL,cAJpB,oBAaV,kBAAC7G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACC,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,4BAAKzG,EAAQ8E,OAEf,kBAACyG,GAAA,EAAU9E,KAAX,KACE,kBAAC,EAAD,CACExB,MAAOjF,EAAQwI,OACff,KAAI,UAAKzH,EAAQyI,WAAb,eAGR,kBAAC8C,GAAA,EAAU9E,KAAX,gBAAyBzG,EAAQ0I,OACjC,kBAAC6C,GAAA,EAAU9E,KAAX,qBACgBzG,EAAQmK,gBAK9B,kBAACxF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,uCAC4B,IAA3BtL,EAAQC,QAAQyL,QAAgB,kBAAC,EAAD,mBACjC,kBAACH,GAAA,EAAD,CAAWnG,QAAQ,SAChBpF,EAAQC,QAAQc,KAAI,SAAC4K,GAAD,OACnB,kBAACJ,GAAA,EAAU9E,KAAX,CAAgBiD,IAAKiC,EAAO5D,KAC1B,gCAAS4D,EAAO7G,MAChB,kBAAC,EAAD,CAAQG,MAAO0G,EAAOnD,SACtB,2BAAImD,EAAOC,UAAUC,UAAU,EAAG,KAClC,2BAAIF,EAAOV,aAGf,kBAACM,GAAA,EAAU9E,KAAX,KACE,uDACC2E,GACC,kBAAC,EAAD,CAAShG,QAAQ,UAAUgG,GAE5BjK,EACC,kBAACkD,EAAA,EAAD,CAAMC,SAlHF,SAACC,GT+GU,IAACuH,EAAWH,ES9G3CpH,EAAEC,iBACFpB,GT6GgC0I,ES7GHtB,EAAMC,OAAOtH,GT6GCwI,ES7GG,CAAEnD,SAAQyC,WT6GzB,uCAAuB,WACxD7H,EACAC,GAFwD,mBAAAC,EAAA,sEAKtDF,EAAS,CACP3D,KZhJuC,kCY0Ia,EAWlD4D,IADWlC,EAVuC,EAUpDD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAhBgB,SAoBhDC,IAAMoI,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQpI,GApBT,OAsBtDH,EAAS,CAAE3D,KZ/J8B,kCYyIa,gDAwBtD2D,EAAS,CACP3D,KZjKoC,6BYkKpCE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BwC,yDAAvB,4DSIb,kBAACM,EAAA,EAAK2H,MAAN,CAAYC,UAAU,UACpB,kBAAC5H,EAAA,EAAK6H,MAAN,eACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEyD,GAAG,SACHrD,MAAOuD,EACPzD,SAAU,SAACR,GAAD,OAAOyG,EAAUzG,EAAES,OAAOC,SAEpC,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,mBAGJ,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,WACpB,kBAAC5H,EAAA,EAAK6H,MAAN,gBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEyD,GAAG,WACH6D,IAAI,IACJlH,MAAOgG,EACPlG,SAAU,SAACR,GAAD,OAAO2G,EAAW3G,EAAES,OAAOC,WAGzC,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,WAKF,kBAAC,EAAD,eACS,kBAAC,OAAD,CAAMW,GAAG,UAAT,WADT,6BCzLPqG,GAAY,SAACjJ,EAAI2H,GAAL,8CAAa,WAAO1H,EAAUC,GAAjB,iBAAAC,EAAA,sEACbK,IAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KACRT,EAAS,CACP3D,KpBXyB,gBoBYzBE,QAAS,CACPK,QAAS6D,EAAKkE,IACdjD,KAAMjB,EAAKiB,KACXoD,MAAOrE,EAAKqE,MACZQ,MAAO7E,EAAK6E,MACZ8C,aAAc3H,EAAK2H,aACnBV,SAGJxI,aAAa+J,QAAQ,YAAa7J,KAAK8J,UAAUjJ,IAAW7C,KAAKC,YAb7B,2CAAb,yDC4GV8L,GA1GI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAUvI,EAAc,EAAdA,QAC/B6H,EAAYtB,EAAMC,OAAOtH,GAEzB2H,EAAM0B,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhEvJ,EAAWoC,cAGT/E,EADKgF,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAClCC,UAERyG,qBAAU,WACJ4E,GACF1I,EAASgJ,GAAUN,EAAWhB,MAE/B,CAAC1H,EAAU0I,EAAWhB,IAEzB,IAAM8B,EAAwB,SAACzJ,GAC7BC,EDH0B,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC/CD,EAAS,CACP3D,KpBzB4B,mBoB0B5BE,QAASwD,IAEXb,aAAa+J,QAAQ,YAAa7J,KAAK8J,UAAUjJ,IAAW7C,KAAKC,aCFtDoM,CAAe1J,KAO1B,OACE,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,6CACsB,IAArB7K,EAAUiL,OACT,kBAAC,EAAD,2BACqB,kBAAC,OAAD,CAAM3F,GAAG,KAAT,YAGrB,kBAACwF,GAAA,EAAD,CAAWnG,QAAQ,SAChB3E,EAAUM,KAAI,SAACJ,GAAD,OACb,kBAAC4K,GAAA,EAAU9E,KAAX,CAAgBiD,IAAK/I,EAAKX,SACxB,kBAAC2E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACvB,GAAA,EAAD,CAAO9B,IAAKtH,EAAKuH,MAAO8B,IAAKrJ,EAAKmE,KAAMmF,OAAK,EAAC6C,SAAO,KAEvD,kBAAClI,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAAC,OAAD,CAAMvF,GAAE,mBAAcpF,EAAKX,UAAYW,EAAKmE,OAE9C,kBAACF,EAAA,EAAD,CAAK0G,GAAI,GAAT,IAAc3K,EAAK+H,OACnB,kBAAC9D,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACjH,EAAA,EAAKQ,QAAN,CACEyD,GAAG,SACHrD,MAAOtE,EAAKmK,IACZ/F,SAAU,SAACR,GAAD,OACRnB,EACEgJ,GAAUzL,EAAKX,QAAS0M,OAAOnI,EAAES,OAAOC,WAI3C,YAAIuE,MAAM7I,EAAK6K,cAAc/B,QAAQ1I,KAAI,SAACD,GAAD,OACxC,4BAAQ4I,IAAK5I,EAAI,EAAGmE,MAAOnE,EAAI,GAC5BA,EAAI,QAKb,kBAAC8D,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACnG,EAAA,EAAD,CACE1F,KAAK,SACL2F,QAAQ,QACRsB,QAAS,kBAAMkG,EAAsBjM,EAAKX,WAE1C,uBAAGqF,UAAU,0BAS7B,kBAACT,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACxD,EAAA,EAAD,KACE,kBAACyD,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,yCACahG,EAAUsM,QAAO,SAACC,EAAKrM,GAAN,OAAeqM,EAAMrM,EAAKmK,MAAK,GAD7D,WADF,IAMGrK,EACEsM,QAAO,SAACC,EAAKrM,GAAN,OAAeqM,EAAMrM,EAAKmK,IAAMnK,EAAK+H,QAAO,GACnDuE,QAAQ,IAEb,kBAAC1B,GAAA,EAAU9E,KAAX,KACE,kBAACtB,EAAA,EAAD,CACE1F,KAAK,SACL4F,UAAU,YACVoG,SAA+B,IAArBhL,EAAUiL,OACpBhF,QA1EU,WACtBzC,EAAQS,KAAK,8BAqEH,6BCrFCwI,GAZO,SAAC,GAAkB,IAAhBtE,EAAe,EAAfA,SACvB,OACE,kBAAC9C,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,CAAKU,UAAU,6BACb,kBAACT,EAAA,EAAD,CAAKuI,GAAI,GAAI7B,GAAI,GACd1C,MCmEIwE,GA7DK,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAUvI,EAAc,EAAdA,QAAc,EACnBC,mBAAS,IADU,mBACtCmJ,EADsC,KAC/BC,EAD+B,OAEbpJ,mBAAS,IAFI,mBAEtCqJ,EAFsC,KAE5BC,EAF4B,KAIvCpK,EAAWoC,cAEXtE,EAAYuE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBsM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEzF,qBAAU,WACJ/F,GACF8C,EAAQS,KAAK+I,KAEd,CAACxJ,EAAS9C,EAAUsM,IAMvB,OACE,kBAAC,GAAD,KACE,uCACC3N,GAAS,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC2E,EAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACFpB,ElBHiB,SAACiK,EAAOE,GAAR,8CAAqB,WAAOnK,GAAP,mBAAAE,EAAA,sEAEtCF,EAAS,CACP3D,KHhC4B,uBGmCxB8D,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,IAAMoI,KAC3B,mBACA,CAAEsB,QAAOE,YACThK,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAKRT,EAAS,CACP3D,KH9C4B,qBG+C5BE,QAASkE,IAEXvB,aAAa+J,QAAQ,WAAY7J,KAAK8J,UAAUzI,IArBV,kDAuBtCT,EAAS,CACP3D,KHnDyB,kBGoDzBE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BwB,0DAArB,sDkBGR2J,CAAML,EAAOE,MASlB,kBAAClJ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,sBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,QACLyF,YAAY,cACZD,MAAOoI,EACPtI,SAAU,SAACR,GAAD,OAAO+I,EAAS/I,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,YACpB,kBAAC5H,EAAA,EAAK6H,MAAN,iBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,WACLyF,YAAY,iBACZD,MAAOsI,EACPxI,SAAU,SAACR,GAAD,OAAOiJ,EAAYjJ,EAAES,OAAOC,WAG1C,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,YAIF,kBAACT,EAAA,EAAD,CAAKU,UAAU,QACb,kBAACT,EAAA,EAAD,qBACgB,IACd,kBAAC,OAAD,CAAMmB,GAAI0H,EAAQ,6BAAyBA,GAAa,aAAxD,gBCmCKE,GAvFQ,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,SAAUvI,EAAc,EAAdA,QAAc,EACxBC,mBAAS,IADe,mBACzCY,EADyC,KACnC8I,EADmC,OAEtB1J,mBAAS,IAFa,mBAEzCmJ,EAFyC,KAElCC,EAFkC,OAGhBpJ,mBAAS,IAHO,mBAGzCqJ,EAHyC,KAG/BC,EAH+B,OAIFtJ,mBAAS,IAJP,mBAIzC2J,EAJyC,KAIxBC,EAJwB,OAKlB5J,mBAAS,IALS,mBAKzCH,EALyC,KAKhCgK,EALgC,KAO1C3K,EAAWoC,cAEXpE,EAAeqE,aAAY,SAACnG,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBsM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnEzF,qBAAU,WACJ/F,GACF8C,EAAQS,KAAK+I,KAEd,CAACxJ,EAAS9C,EAAUsM,IAUvB,OACE,kBAAC,GAAD,KACE,uCACC1J,GAAW,kBAAC,EAAD,CAASqB,QAAQ,UAAUrB,GACtCjE,GAAS,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC2E,EAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACE+I,IAAaM,EACfE,EAAW,0BAEX3K,EnBkCkB,SAAC0B,EAAMuI,EAAOE,GAAd,8CAA2B,WAAOnK,GAAP,mBAAAE,EAAA,sEAE/CF,EAAS,CACP3D,KHtE+B,0BGyE3B8D,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,IAAMoI,KAC3B,aACA,CAAEjH,OAAMuI,QAAOE,YACfhK,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAKRT,EAAS,CACP3D,KHpF+B,wBGqF/BE,QAASkE,IAEXT,EAAS,CACP3D,KH7F4B,qBG8F5BE,QAASkE,IAEXvB,aAAa+J,QAAQ,WAAY7J,KAAK8J,UAAUzI,IAzBD,kDA2B/CT,EAAS,CACP3D,KH7F4B,qBG8F5BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCiC,0DAA3B,sDmBlCTiK,CAASlJ,EAAMuI,EAAOE,MAW7B,kBAAClJ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QACpB,kBAAC5H,EAAA,EAAK6H,MAAN,qBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,WAGtC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,sBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,QACLyF,YAAY,cACZD,MAAOoI,EACPtI,SAAU,SAACR,GAAD,OAAO+I,EAAS/I,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,YACpB,kBAAC5H,EAAA,EAAK6H,MAAN,iBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,WACLyF,YAAY,iBACZD,MAAOsI,EACPxI,SAAU,SAACR,GAAD,OAAOiJ,EAAYjJ,EAAES,OAAOC,WAG1C,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,mBACpB,kBAAC5H,EAAA,EAAK6H,MAAN,yBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,WACLyF,YAAY,mBACZD,MAAO4I,EACP9I,SAAU,SAACR,GAAD,OAAOuJ,EAAmBvJ,EAAES,OAAOC,WAGjD,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,aAIF,kBAACT,EAAA,EAAD,CAAKU,UAAU,QACb,kBAACT,EAAA,EAAD,wBACmB,IACjB,kBAAC,OAAD,CAAMmB,GAAI0H,EAAQ,0BAAsBA,GAAa,UAArD,a,UCuFKQ,GAlKO,SAAC,GAA0B,EAAxBzB,SAAyB,IAAfvI,EAAc,EAAdA,QAAc,EACvBC,qBADuB,mBACxCY,EADwC,KAClC8I,EADkC,OAErB1J,mBAAS,IAFY,mBAExCmJ,EAFwC,KAEjCC,EAFiC,OAGfpJ,mBAAS,IAHM,mBAGxCqJ,EAHwC,KAG9BC,EAH8B,OAIDtJ,mBAAS,IAJR,mBAIxC2J,EAJwC,KAIvBC,EAJuB,OAKjB5J,mBAAS,IALQ,mBAKxCH,EALwC,KAK/BgK,EAL+B,KAOzC3K,EAAWoC,cAEXnE,EAAcoE,aAAY,SAACnG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkBsF,aAAY,SAACnG,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAcuD,aAAY,SAACnG,GAAD,OAAWA,EAAM4C,eAChCgM,EAA8ChM,EAAvDxC,QAA+ByO,EAAwBjM,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpD+E,qBAAU,WACH/F,EAGEE,GAAgBC,GAASA,EAAKwD,MAIjC8I,EAAQtM,EAAKwD,MACbwI,EAAShM,EAAK+L,SAJdjK,EAASF,EAAe,YACxBE,ECyHoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE9BF,EAAS,CACP3D,KtB3J+B,0BsBwJH,EAQ1B4D,IADWlC,EAPe,EAO5BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZR,SAgBPC,IAAMC,IAAN,uBAAkCL,GAhB3B,gBAgBtBM,EAhBsB,EAgBtBA,KAERT,EAAS,CACP3D,KtB1K+B,wBsB2K/BE,QAASkE,IApBmB,kDAuB9BT,EAAS,CACP3D,KtB9K4B,qBsB+K5BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BgB,0DAAN,0DD7HtBE,EAAQS,KAAK,YAUd,CAACtB,EAAUa,EAAS9C,EAAUG,IAWjC,OACE,oCACE,kBAACqD,EAAA,EAAD,CAAKU,UAAU,QACb,kBAACT,EAAA,EAAD,CAAK0G,GAAI,IACP,yCACC4C,EACC,kBAAC,EAAD,MACEC,EACF,kBAAC,EAAD,CAAS/I,QAAQ,UAAU+I,GAE3B,kBAACC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnJ,UAAU,YACjD,+BACE,4BACE,oCACA,qCACA,oCACA,yCACA,kCACA,qCAGJ,+BACGlD,EAAOpB,KAAI,SAACc,GAAD,OACV,kBAAC,gBAAD,CAAekE,GAAE,iBAAYlE,EAAMkG,MACjC,wBAAI2B,IAAK7H,EAAMkG,KACb,4BAAKlG,EAAM+J,UAAUC,UAAU,EAAG,KAClC,4BAAKhK,EAAM4M,YACX,4BACG5M,EAAM6M,OACL7M,EAAM8M,OAAO9C,UAAU,EAAG,IAE1B,uBACExG,UAAU,eACVsC,MAAO,CAAED,MAAO,UAItB,4BACG7F,EAAM+M,YACL/M,EAAMgN,YAAYhD,UAAU,EAAG,IAE/B,uBACExG,UAAU,eACVsC,MAAO,CAAED,MAAO,UAItB,4BAAK7F,EAAMkG,KAEX,4BACE,kBAAC,gBAAD,CAAehC,GAAE,iBAAYlE,EAAMkG,MACjC,kBAAC5C,EAAA,EAAD,CAAQE,UAAU,SAASD,QAAQ,SAAnC,sBAapB,kBAACT,EAAA,EAAD,CAAKU,UAAU,QACb,kBAACT,EAAA,EAAD,CAAK0G,GAAI,GACP,4CACCvH,GAAW,kBAAC,EAAD,CAASqB,QAAQ,UAAUrB,GACtCjE,GAAS,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GACpCK,GAAW,kBAAC,EAAD,CAASiF,QAAQ,WAAjB,mBACX1F,GAAW,kBAAC,EAAD,MACZ,kBAAC2E,EAAA,EAAD,CAAMC,SAhFQ,SAACC,GACrBA,EAAEC,iBACE+I,IAAaM,EACfE,EAAW,0BAEX3K,EpBqF2B,SAAC9B,GAAD,8CAAU,WAAO8B,EAAUC,GAAjB,uBAAAC,EAAA,sEAEvCF,EAAS,CACP3D,KHnIqC,gCGgIA,EAQnC4D,IADWlC,EAPwB,EAOrCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbC,SAiBhBC,IAAMmL,IAAN,qBAAgCxN,EAAMiC,GAjBtB,gBAiB/BM,EAjB+B,EAiB/BA,KAERT,EAAS,CACP3D,KHnJqC,8BGoJrCE,QAASkE,IArB4B,kDAwBvCT,EAAS,CACP3D,KHvJkC,2BGwJlCE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7ByB,0DAAV,wDoBrFlBgL,CAAkB,CAAE5L,GAAI7B,EAAKyG,IAAKjD,OAAMuI,QAAOE,gBA4ElD,kBAAClJ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QACpB,kBAAC5H,EAAA,EAAK6H,MAAN,qBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,WAGtC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,sBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,QACLyF,YAAY,cACZD,MAAOoI,EACPtI,SAAU,SAACR,GAAD,OAAO+I,EAAS/I,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,YACpB,kBAAC5H,EAAA,EAAK6H,MAAN,iBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,WACLyF,YAAY,iBACZD,MAAOsI,EACPxI,SAAU,SAACR,GAAD,OAAOiJ,EAAYjJ,EAAES,OAAOC,WAG1C,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,mBACpB,kBAAC5H,EAAA,EAAK6H,MAAN,yBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,WACLyF,YAAY,mBACZD,MAAO4I,EACP9I,SAAU,SAACR,GAAD,OAAOuJ,EAAmBvJ,EAAES,OAAOC,WAGjD,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,eE1HG4J,GA3CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,kBAAC/I,EAAA,EAAD,CAAKhB,UAAU,+BACb,kBAACgB,EAAA,EAAII,KAAL,KACGwI,EACC,kBAAC,gBAAD,CAAelJ,GAAG,UAChB,kBAACM,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,YAGJ,kBAACpF,EAAA,EAAII,KAAL,KACGyI,EACC,kBAAC,gBAAD,CAAenJ,GAAG,aAChB,kBAACM,EAAA,EAAIC,KAAL,kBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,aAGJ,kBAACpF,EAAA,EAAII,KAAL,KACG0I,EACC,kBAAC,gBAAD,CAAepJ,GAAG,YAChB,kBAACM,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,YAGJ,kBAACpF,EAAA,EAAII,KAAL,KACG2I,EACC,kBAAC,gBAAD,CAAerJ,GAAG,eAChB,kBAACM,EAAA,EAAIC,KAAL,qBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,kBCwCK4D,GArEQ,SAAC,GAAiB,IAAfpL,EAAc,EAAdA,QAEhBvD,EADK+E,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAClCE,gBAF8B,EAIRwD,mBAASxD,EAAgB4O,SAJjB,mBAI/BA,EAJ+B,KAItBC,EAJsB,OAKdrL,mBAASxD,EAAgB8O,MALX,mBAK/BA,EAL+B,KAKzBC,EALyB,OAMFvL,mBAASxD,EAAgBgP,YANvB,mBAM/BA,EAN+B,KAMnBC,EANmB,OAORzL,mBAASxD,EAAgBkP,SAPjB,mBAO/BA,EAP+B,KAOtBC,EAPsB,KAQhCzM,EAAWoC,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAeyJ,OAAK,EAACC,OAAK,IAC1B,wCACA,kBAAC7K,EAAA,EAAD,CAAMC,SAVY,SAACC,GRUU,IAACV,EQThCU,EAAEC,iBACFpB,GRQgCS,EQRH,CAAEyL,UAASE,OAAME,aAAYE,WRQjB,SAACxM,GAC5CA,EAAS,CACP3D,KpB/BsC,6BoBgCtCE,QAASkE,IAEXvB,aAAa+J,QAAQ,kBAAmB7J,KAAK8J,UAAUzI,OQZrDI,EAAQS,KAAK,cAQT,kBAACL,EAAA,EAAK2H,MAAN,CAAYC,UAAU,WACpB,kBAAC5H,EAAA,EAAK6H,MAAN,gBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,UACLyF,YAAY,UACZD,MAAOqK,EACPQ,UAAQ,EACR/K,SAAU,SAACR,GAAD,OAAOgL,EAAWhL,EAAES,OAAOC,WAGzC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QACpB,kBAAC5H,EAAA,EAAK6H,MAAN,aACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,OACZD,MAAOuK,EACPM,UAAQ,EACR/K,SAAU,SAACR,GAAD,OAAOkL,EAAQlL,EAAES,OAAOC,WAGtC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,cACpB,kBAAC5H,EAAA,EAAK6H,MAAN,oBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,aACLyF,YAAY,cACZD,MAAOyK,EACPI,UAAQ,EACR/K,SAAU,SAACR,GAAD,OAAOoL,EAAcpL,EAAES,OAAOC,WAG5C,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,WACpB,kBAAC5H,EAAA,EAAK6H,MAAN,gBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,UACLyF,YAAY,UACZD,MAAO2K,EACPE,UAAQ,EACR/K,SAAU,SAACR,GAAD,OAAOsL,EAAWtL,EAAES,OAAOC,WAGzC,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,eCfO2K,GA9CO,SAAC,GAAiB,IAAf9L,EAAc,EAAdA,QACVwB,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAClCE,iBAGNuD,EAAQS,KAAK,aALsB,MAQKR,mBAAS,UARd,mBAQ9BjD,EAR8B,KAQf+O,EARe,KAU/B5M,EAAWoC,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAeyJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAAC9K,EAAA,EAAD,CAAMC,SAVY,SAACC,GTeQ,IAACV,ESd9BU,EAAEC,iBACFpB,GTa8BS,ESbH5C,ETaY,SAACmC,GAC1CA,EAAS,CACP3D,KpBrCoC,2BoBsCpCE,QAASkE,IAEXvB,aAAa+J,QAAQ,gBAAiB7J,KAAK8J,UAAUzI,OSjBnDI,EAAQS,KAAK,iBAQT,kBAACL,EAAA,EAAK2H,MAAN,KACE,kBAAC3H,EAAA,EAAK6H,MAAN,CAAY5D,GAAG,UAAf,kBACA,kBAAC1D,EAAA,EAAD,KACE,kBAACP,EAAA,EAAK4L,MAAN,CACExQ,KAAK,QACLyQ,MAAM,wBACN/M,GAAG,SACH2B,KAAK,gBACLG,MAAM,SACNkL,SAAO,EACPpL,SAAU,SAACR,GAAD,OAAOyL,EAAiBzL,EAAES,OAAOC,YAKjD,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,eCkHOgL,GAvJU,SAAC,GAAiB,IAAfnM,EAAc,EAAdA,QACpBb,EAAWoC,cACXhF,EAAOiF,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAGpC6P,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAG/CzM,EAAKiQ,WAAaJ,EAChB7P,EAAKC,UAAUsM,QAAO,SAACC,EAAKrM,GAAN,OAAeqM,EAAMrM,EAAK+H,MAAQ/H,EAAKmK,MAAK,IAGpEtK,EAAKkQ,cAAgBL,EAAY7P,EAAKiQ,WAAa,IAAM,EAAI,KAE7DjQ,EAAKmQ,SAAWN,EAAY3D,QAAQ,IAAOlM,EAAKiQ,YAAYxD,QAAQ,KAEpEzM,EAAKiO,YACH/B,OAAOlM,EAAKiQ,YACZ/D,OAAOlM,EAAKkQ,eACZhE,OAAOlM,EAAKmQ,WACZ1D,QAAQ,GAEV,IAAMrL,EAAc6D,aAAY,SAACnG,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBoH,qBAAU,WACJ/G,GACF8D,EAAQS,KAAR,iBAAuB7C,EAAMkG,QAG9B,CAAC9D,EAAS9D,IAeb,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAAe8O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAACzK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACC,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,wCACA,2BACE,6CACCjG,EAAKE,gBAAgB4O,QAFxB,KAEmC9O,EAAKE,gBAAgB8O,KAFxD,IAE+D,IAC5DhP,EAAKE,gBAAgBgP,WAHxB,IAGqC,IAClClP,EAAKE,gBAAgBkP,UAG1B,kBAACrE,GAAA,EAAU9E,KAAX,KACE,8CACA,4CACCjG,EAAKS,eAER,kBAACsK,GAAA,EAAU9E,KAAX,KACE,2CAC2B,IAA1BjG,EAAKC,UAAUiL,OACd,kBAAC,EAAD,2BAEA,kBAACH,GAAA,EAAD,CAAWnG,QAAQ,SAChB5E,EAAKC,UAAUM,KAAI,SAACJ,EAAMiQ,GAAP,OAClB,kBAACrF,GAAA,EAAU9E,KAAX,CAAgBiD,IAAKkH,GACnB,kBAACjM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACvB,GAAA,EAAD,CACE9B,IAAKtH,EAAKuH,MACV8B,IAAKrJ,EAAKmE,KACVmF,OAAK,EACL6C,SAAO,KAGX,kBAAClI,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMmB,GAAE,mBAAcpF,EAAKX,UACxBW,EAAKmE,OAGV,kBAACF,EAAA,EAAD,CAAK0G,GAAI,GACN3K,EAAKmK,IADR,OACiBnK,EAAK+H,MADtB,OACiC/H,EAAKmK,IAAMnK,EAAK+H,gBAUjE,kBAAC9D,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACxD,EAAA,EAAD,KACE,kBAACyD,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,8CAEF,kBAAC8E,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOpE,EAAKiQ,cAGhB,kBAAClF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOpE,EAAKkQ,iBAGhB,kBAACnF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOpE,EAAKmQ,YAGhB,kBAACpF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOpE,EAAKiO,cAGhB,kBAAClD,GAAA,EAAU9E,KAAX,KACG3G,GAAS,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,IAGvC,kBAACyL,GAAA,EAAU9E,KAAX,KACE,kBAACtB,EAAA,EAAD,CACE1F,KAAK,SACL4F,UAAU,YACVoG,SAA6B,IAAnBjL,EAAKC,UACfiG,QA1GU,WACxBtD,EJvBuB,SAACvB,GAAD,8CAAW,WAAOuB,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACP3D,KtBzB8B,yBsBsBE,EAQ9B4D,IADWlC,EAPmB,EAOhCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbJ,SAiBXC,IAAMoI,KAAN,cAA0BlK,EAAO0B,GAjBtB,gBAiB1BM,EAjB0B,EAiB1BA,KAERT,EAAS,CACP3D,KtBzC8B,uBsB0C9BE,QAASkE,IArBuB,kDAwBlCT,EAAS,CACP3D,KtB7C2B,oBsB8C3BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BoB,0DAAX,wDIwBrB8M,CAAY,CACV9O,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBwP,WAAYjQ,EAAKiQ,WACjBC,cAAelQ,EAAKkQ,cACpBC,SAAUnQ,EAAKmQ,SACflC,WAAYjO,EAAKiO,gBA6FT,sB,SCwFDqC,GAlNK,SAAC,GAAwB,IAgBpBR,EAhBF9F,EAAqB,EAArBA,MAAOvG,EAAc,EAAdA,QACtB8M,EAAUvG,EAAMC,OAAOtH,GADa,EAEVe,oBAAS,GAFC,mBAEnC8M,EAFmC,KAEzBC,EAFyB,KAGpC7N,EAAWoC,cACX1D,EAAe2D,aAAY,SAACnG,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAWyD,aAAY,SAACnG,GAAD,OAAWA,EAAM0C,YAC7BkP,EAAoClP,EAA7CtC,QAA8ByR,EAAenP,EAAxB7B,QAEvB8B,EAAewD,aAAY,SAACnG,GAAD,OAAWA,EAAM2C,gBACjCmP,EAA4CnP,EAArDvC,QAAkC2R,EAAmBpP,EAA5B9B,QAGzBgB,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SACR,IAAKzB,EAAS,CAKZmC,EAAM4O,YAJeH,EAKnBzO,EAAME,WAAWgL,QAAO,SAACC,EAAKrM,GAAN,OAAeqM,EAAMrM,EAAK+H,MAAQ/H,EAAKmK,MAAK,IAJ5DyF,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAQjD/F,qBAAU,WACH/F,GACH8C,EAAQS,KAAK,UAEf,ILG4BvB,EKHtBmO,EAAe,uCAAG,gCAAAhO,EAAA,sEACWK,IAAMC,IAAI,sBADrB,gBACR2N,EADQ,EACd1N,MACF2N,EAASC,SAASC,cAAc,WAC/BjS,KAAO,kBACd+R,EAAOvJ,IAAP,kDAAwDsJ,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdX,GAAY,IAEdQ,SAASI,KAAKC,YAAYN,GATJ,4CAAH,sDAYhB3P,GAASA,EAAMkG,MAAQgJ,GAAWI,GAAcE,GACnDjO,EAAS,CAAE3D,K3BvDc,oB2BwDzB2D,EAAS,CAAE3D,K3B1CkB,wB2B2C7B2D,GLZ0BD,EKYD4N,ELZA,uCAAQ,WAAO3N,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACP3D,KtBvD+B,0BsBoDE,EAQ/B4D,IADWlC,EAPoB,EAOjCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZH,SAgBZC,IAAMC,IAAN,sBAAyBT,GAAMI,GAhBnB,gBAgB3BM,EAhB2B,EAgB3BA,KAERT,EAAS,CACP3D,KtBtE+B,wBsBuE/BE,QAASkE,IApBwB,kDAuBnCT,EAAS,CACP3D,KtB1E4B,qBsB2E5BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BqB,0DAAR,2DKaflC,EAAM6M,SACXvH,OAAO4K,OAGVd,GAAY,GAFZK,OAKH,CAAClO,EAAUvB,EAAOkP,EAASI,EAAYE,EAAgBlQ,EAAU8C,IAUpE,OAAOvE,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAAC,WAAD,KACE,qCAAW+B,EAAMkG,KACjB,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACC,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,wCACA,2BACE,0CADF,IAC2B5E,EAAMP,KAAKwD,MAEtC,2BACE,2CAAyB,IACzB,uBAAGgC,KAAI,iBAAYjF,EAAMP,KAAK+L,QAAUxL,EAAMP,KAAK+L,QAErD,2BACE,4CACCxL,EAAMnB,gBAAgB4O,QAFzB,KAEoCzN,EAAMnB,gBAAgB8O,KAAM,IAC7D3N,EAAMnB,gBAAgBgP,WAHzB,IAGsC,IACnC7N,EAAMnB,gBAAgBkP,SAExB/N,EAAM+M,YACL,kBAAC,EAAD,CAASxJ,QAAQ,WAAjB,gBACgBvD,EAAMgN,aAGtB,kBAAC,EAAD,CAASzJ,QAAQ,UAAjB,qBAIJ,kBAACmG,GAAA,EAAU9E,KAAX,KACE,8CACA,2BACE,4CACC5E,EAAMZ,eAERY,EAAM6M,OACL,kBAAC,EAAD,CAAStJ,QAAQ,WAAjB,WAAoCvD,EAAM8M,QAE1C,kBAAC,EAAD,CAASvJ,QAAQ,UAAjB,qBAIJ,kBAACmG,GAAA,EAAU9E,KAAX,KACE,2CACC5E,EACC,oCAC+B,IAA5BA,EAAME,WAAW2J,OAChB,kBAAC,EAAD,uBAEA,kBAACH,GAAA,EAAD,CAAWnG,QAAQ,SAChBvD,EAAME,WAAWhB,KAAI,SAACJ,EAAMiQ,GAAP,OACpB,kBAACrF,GAAA,EAAU9E,KAAX,CAAgBiD,IAAKkH,GACnB,kBAACjM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACvB,GAAA,EAAD,CACE9B,IAAKtH,EAAKuH,MACV8B,IAAKrJ,EAAKmE,KACVmF,OAAK,EACL6C,SAAO,KAGX,kBAAClI,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMmB,GAAE,mBAAcpF,EAAKX,UACxBW,EAAKmE,OAGV,kBAACF,EAAA,EAAD,CAAK0G,GAAI,GACN3K,EAAKmK,IADR,OACiBnK,EAAK+H,MADtB,OAEG/H,EAAKmK,IAAMnK,EAAK+H,cAQ7B,QAIV,kBAAC9D,EAAA,EAAD,CAAK0G,GAAI,GACP,kBAACxD,EAAA,EAAD,KACE,kBAACyD,GAAA,EAAD,CAAWnG,QAAQ,SACjB,kBAACmG,GAAA,EAAU9E,KAAX,KACE,8CAEF,kBAAC8E,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO/C,EAAM4O,cAGjB,kBAAClF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAO/C,EAAM6O,iBAGjB,kBAACnF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAO/C,EAAM8O,YAGjB,kBAACpF,GAAA,EAAU9E,KAAX,KACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO/C,EAAM4M,eAGf5M,EAAM6M,QACN,kBAACnD,GAAA,EAAU9E,KAAX,KACGyK,GAAc,kBAAC,EAAD,MACbF,EAGA,kBAAC,gBAAD,CACEgB,OAAQnQ,EAAM4M,WACdwD,UAnIU,SAACC,GAC7B9O,ELSoB,SAAC2N,EAASmB,GAAV,8CAA4B,WAClD9O,EACAC,GAFkD,uBAAAC,EAAA,sEAKhDF,EAAS,CACP3D,KtBtF2B,sBsBgFmB,EAW5C4D,IADWlC,EAViC,EAU9CD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAhBU,SAoBzBC,IAAMmL,IAAN,sBACNiC,EADM,QAErBmB,EACA3O,GAvB8C,gBAoBxCM,EApBwC,EAoBxCA,KAMRT,EAAS,CACP3D,KtB1G2B,oBsB2G3BE,QAASkE,IA5BqC,kDA+BhDT,EAAS,CACP3D,KtB9GwB,iBsB+GxBE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UApCkC,0DAA5B,wDKTXoO,CAASpB,EAASmB,OA8HX,kBAAC,EAAD,OASLd,GAAkB,kBAAC,EAAD,MAClBjQ,EAASyF,SAAW/E,EAAM6M,SAAW7M,EAAM+M,aAC1C,kBAACrD,GAAA,EAAU9E,KAAX,KACE,kBAACtB,EAAA,EAAD,CACE1F,KAAK,SACL4F,UAAU,gBACVqB,QA1IK,WACrBtD,EL8CwB,SAACvB,GAAD,8CAAW,WAAOuB,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CACP3D,KtB9G+B,0BsB2GE,EAQ/B4D,IADWlC,EAPoB,EAOjCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZH,SAgBZC,IAAMmL,IAAN,sBACNjN,EAAMkG,IADA,YAErB,GACAxE,GAnBiC,gBAgB3BM,EAhB2B,EAgB3BA,KAMRT,EAAS,CACP3D,KtBjI+B,wBsBkI/BE,QAASkE,IAxBwB,kDA2BnCT,EAAS,CACP3D,KtBrI4B,qBsBsI5BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhCqB,0DAAX,wDK9CfqO,CAAavQ,MAsIR,4BC9HHwQ,GA/EQ,SAAC,GAAiB,IAAfpO,EAAc,EAAdA,QAClBb,EAAWoC,cACXhE,EAAWiE,aAAY,SAACnG,GAAD,OAAWA,EAAMkC,YACtC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAESmR,EADE7M,aAAY,SAACnG,GAAD,OAAWA,EAAMoC,cACxCvB,QAER+G,qBAAU,WACJ/F,GAAYA,EAASyF,QACvBxD,E3BuJmB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE3BF,EAAS,CACP3D,KH/J2B,sBG4JF,EAQvB4D,IADWlC,EAPY,EAOzBD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZX,SAgBJC,IAAMC,IAAN,aAAwBL,GAhBpB,gBAgBnBM,EAhBmB,EAgBnBA,KAERT,EAAS,CACP3D,KH9K2B,oBG+K3BE,QAASkE,IApBgB,kDAuB3BT,EAAS,CACP3D,KHlLwB,iBGmLxBE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5Ba,0DAAN,yD2BrJnBE,EAAQS,KAAK,YAEd,CAACtB,EAAUa,EAAS9C,EAAUmR,IAEjC,IAAMC,EAAgB,SAACpP,GACjBgE,OAAOqL,QAAQ,kBACjBpP,E3B+KoB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE9BF,EAAS,CACP3D,KH1L6B,wBGuLD,EAQ1B4D,IADWlC,EAPe,EAO5BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZR,SAgBxBC,IAAM8O,OAAN,qBAA2BtP,GAAMI,GAhBT,OAkB9BH,EAAS,CAAE3D,KHxMoB,wBGsLD,gDAoB9B2D,EAAS,CACP3D,KH1M0B,mBG2M1BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBgB,yDAAR,wD2B/KX2O,CAAWvP,KAGxB,OACE,kBAAC,WAAD,KACE,qCACCzD,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnJ,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,qCACA,+BAGJ,+BACG5D,EAAMV,KAAI,SAACO,GAAD,OACT,wBAAIoI,IAAKpI,EAAKyG,KACZ,4BAAKzG,EAAKyG,KACV,4BAAKzG,EAAKwD,MACV,4BACE,uBAAGgC,KAAI,kBAAaxF,EAAK+L,QAAU/L,EAAK+L,QAE1C,4BACG/L,EAAKsF,QACJ,uBAAGvB,UAAU,eAAesC,MAAO,CAAED,MAAO,WAE5C,uBAAGrC,UAAU,eAAesC,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAe3B,GAAE,sBAAiBzE,EAAKyG,IAAtB,UACf,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQC,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACF,EAAA,EAAD,CACEC,QAAQ,SACRC,UAAU,SACVqB,QAAS,kBAAM6L,EAAcjR,EAAKyG,OAElC,uBAAG1C,UAAU,2BCyBlBsN,GAzFQ,SAAC,GAAwB,IAAtBnI,EAAqB,EAArBA,MAAOvG,EAAc,EAAdA,QACzB2O,EAASpI,EAAMC,OAAOtH,GADiB,EAErBe,mBAAS,IAFY,mBAEtCY,EAFsC,KAEhC8I,EAFgC,OAGnB1J,mBAAS,IAHU,mBAGtCmJ,EAHsC,KAG/BC,EAH+B,OAIfpJ,oBAAS,GAJM,mBAItC0C,EAJsC,KAI7BiM,EAJ6B,KAMvCzP,EAAWoC,cAEXnE,EAAcoE,aAAY,SAACnG,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAClBK,EAAa8D,aAAY,SAACnG,GAAD,OAAWA,EAAMqC,cAErCmR,EAGPnR,EAHFjC,QACOqT,EAELpR,EAFF7B,MACSkT,EACPrR,EADFxB,QAGF+G,qBAAU,WACJ8L,GACF5P,EAAS,CAAE3D,K/BHgB,sB+BI3BwE,EAAQS,KAAK,oBAERpD,EAAKwD,MAAQxD,EAAKyG,MAAQ6K,GAG7BhF,EAAQtM,EAAKwD,MACbwI,EAAShM,EAAK+L,OACdwF,EAAWvR,EAAKsF,UAJhBxD,EAASF,EAAe0P,MAO3B,CAACxP,EAAUa,EAAS2O,EAAQtR,EAAM0R,IAOrC,OACE,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAMjN,GAAG,kBAAkBV,UAAU,sBAArC,WAGA,kBAAC,GAAD,KACE,yCACCyN,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAAS3N,QAAQ,UAAU2N,GAC1CrT,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAACuE,EAAA,EAAD,CAAMC,SAnBQ,SAACC,GACrBA,EAAEC,iBACFpB,E5B2LsB,SAAC9B,GAAD,8CAAU,WAAO8B,EAAUC,GAAjB,uBAAAC,EAAA,sEAEhCF,EAAS,CACP3D,KHnN6B,wBGgNC,EAQ5B4D,IADWlC,EAPiB,EAO9BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbN,SAiBTC,IAAMmL,IAAN,qBAAwBxN,EAAKyG,KAAOzG,EAAMiC,GAjBjC,gBAiBxBM,EAjBwB,EAiBxBA,KAERT,EAAS,CAAE3D,KHlOoB,wBGmO/B2D,EAAS,CAAE3D,KHtPqB,uBGsPOE,QAASkE,IApBhB,kDAsBhCT,EAAS,CACP3D,KHrO0B,mBGsO1BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BkB,0DAAV,wD4B3LbkP,CAAW,CAAElL,IAAK6K,EAAQ9N,OAAMuI,QAAOzG,eAkBxC,kBAACvC,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QACpB,kBAAC5H,EAAA,EAAK6H,MAAN,cACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,WAGtC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,sBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,QACLyF,YAAY,cACZD,MAAOoI,EACPtI,SAAU,SAACR,GAAD,OAAO+I,EAAS/I,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,WACpB,kBAAC5H,EAAA,EAAK4L,MAAN,CACExQ,KAAK,WACLyQ,MAAM,WACNC,QAASvJ,EACT7B,SAAU,SAACR,GAAD,OAAOsO,EAAWtO,EAAES,OAAOmL,aAIzC,kBAAChL,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,cC+CG8N,GA3HW,SAAC,GAAwB,IAAtBjP,EAAqB,EAArBA,QACrBqD,EAD0C,EAAZkD,MACXC,OAAOnD,YAAc,EACxClE,EAAWoC,cACXnG,EAAcoG,aAAY,SAACnG,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAEnCK,EAAgBuF,aAAY,SAACnG,GAAD,OAAWA,EAAMY,iBAExCiT,EAGPjT,EAHFR,QACO0T,EAELlT,EAFFJ,MACSwS,EACPpS,EADFC,QAGIC,EAAgBqF,aAAY,SAACnG,GAAD,OAAWA,EAAMc,iBAExCiT,EAIPjT,EAJFV,QACO4T,EAGLlT,EAHFN,MACSyT,EAEPnT,EAFFD,QACSqT,EACPpT,EADFJ,QAIMmB,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAER+F,qBAAU,WACR9D,EAAS,CACP3D,KpC7B8B,yBoC+B3B0B,GAAaA,EAASyF,SACzB3C,EAAQS,KAAK,UAEX6O,EACFtP,EAAQS,KAAR,yBAA+B8O,EAAezL,IAA9C,UAEA3E,EAASiE,EAAa,GAAIC,MAE3B,CACDlE,EACAa,EACA9C,EACAmR,EACAiB,EACAC,EACAlM,IAGF,IAAMiL,EAAgB,SAACpP,GACjBgE,OAAOqL,QAAQ,kBAEjBpP,ExBDuB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAEjCF,EAAS,CACP3D,KZ7DgC,2BY0DD,EAQ7B4D,IADWlC,EAPkB,EAO/BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZL,SAgB3BC,IAAM8O,OAAN,wBAA8BtP,GAAMI,GAhBT,OAkBjCH,EAAS,CAAE3D,KZ3EuB,2BYyDD,gDAoBjC2D,EAAS,CACP3D,KZ7E6B,sBY8E7BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBmB,yDAAR,wDwBCd0P,CAActQ,KAQ3B,OACE,kBAAC,WAAD,KACE,kBAACwB,EAAA,EAAD,CAAKU,UAAU,sBACb,kBAACT,EAAA,EAAD,KACE,yCAEF,kBAACA,EAAA,EAAD,CAAKS,UAAU,cACb,kBAACF,EAAA,EAAD,CAAQE,UAAU,OAAOqB,QAXJ,WAE3BtD,ExBsByB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACP3D,KZtFgC,2BYmFH,EAQ3B4D,IADWlC,EAPgB,EAO7BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZP,SAgBRC,IAAMoI,KAAN,gBAA4B,GAAIxI,GAhBxB,gBAgBvBM,EAhBuB,EAgBvBA,KAERT,EAAS,CAAE3D,KZpGuB,yBYoGOE,QAASkE,IAlBnB,kDAoB/BT,EAAS,CACP3D,KZtG6B,sBYuG7BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBiB,0DAAN,2DwBZjB,uBAAGsB,UAAU,gBADf,qBAKH8N,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAAShO,QAAQ,UAAUgO,GAC1CC,GAAiB,kBAAC,EAAD,MACjBC,GAAe,kBAAC,EAAD,CAASlO,QAAQ,UAAUkO,GAC1C5T,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAAC,WAAD,KACE,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnJ,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,wCACA,qCACA,+BAGJ,+BACG9F,EAASwB,KAAI,SAACf,GAAD,OACZ,wBAAI0J,IAAK1J,EAAQ+H,KACf,4BAAK/H,EAAQ+H,KACb,4BAAK/H,EAAQ8E,MACb,gCAAM9E,EAAQ0I,OACd,4BAAK1I,EAAQ0T,UACb,4BAAK1T,EAAQ2T,OACb,4BACE,kBAAC,gBAAD,CAAe5N,GAAE,yBAAoB/F,EAAQ+H,IAA5B,UACf,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQC,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACF,EAAA,EAAD,CACEC,QAAQ,SACRC,UAAU,SACVqB,QAAS,kBAAM6L,EAAcvS,EAAQ+H,OAErC,uBAAG1C,UAAU,yBAOzB,kBAAC,EAAD,CAAUzF,MAAOA,EAAOC,KAAMA,EAAM+G,SAAS,OC0DxCgN,GA7KW,SAAC,GAAwB,IAAtBpJ,EAAqB,EAArBA,MAAOvG,EAAc,EAAdA,QAC5B6H,EAAYtB,EAAMC,OAAOtH,GADiB,EAExBe,mBAAS,IAFe,mBAEzCY,EAFyC,KAEnC8I,EAFmC,OAGtB1J,mBAAS,GAHa,mBAGzCwE,EAHyC,KAGlCmL,EAHkC,OAItB3P,mBAAS,IAJa,mBAIzCgE,EAJyC,KAIlC4L,EAJkC,OAKtB5P,mBAAS,IALa,mBAKzCyP,EALyC,KAKlCI,EALkC,OAMhB7P,mBAAS,IANO,mBAMzCwP,EANyC,KAM/BM,EAN+B,OAOR9P,mBAAS,GAPD,mBAOzCsH,EAPyC,KAO3ByI,EAP2B,OAQV/P,mBAAS,IARC,mBAQzCiG,EARyC,KAQ5B+J,EAR4B,OASdhQ,oBAAS,GATK,mBASzCiQ,EATyC,KAS9BC,EAT8B,KAW1ChR,EAAWoC,cAEXzF,EAAiB0F,aAAY,SAACnG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,GAAgBoF,aAAY,SAACnG,GAAD,OAAWA,EAAMe,iBAExCyS,GAGPzS,GAHFX,QACOqT,GAEL1S,GAFFP,MACSkT,GACP3S,GADFF,QAGF+G,qBAAU,WACJ8L,IACF5P,EAAS,CAAE3D,KrCxBmB,yBqCyB9BwE,EAAQS,KAAK,uBAER1E,EAAQ8E,MAAQ9E,EAAQ+H,MAAQ+D,GAGnC8B,EAAQ5N,EAAQ8E,MAChB+O,EAAS7T,EAAQ0I,OACjBoL,EAAS9T,EAAQkI,OACjB6L,EAAS/T,EAAQ2T,OACjBK,EAAYhU,EAAQ0T,UACpBO,EAAgBjU,EAAQwL,cACxB0I,EAAelU,EAAQmK,cARvB/G,EAASmE,EAAmBuE,MAW/B,CAAC1I,EAAUa,EAAS6H,EAAW9L,EAASgT,KAE3C,IAAMqB,GAAiB,uCAAG,WAAO9P,GAAP,uBAAAjB,EAAA,6DAClBgR,EAAO/P,EAAES,OAAOuP,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJW,SAMhB7Q,EAAS,CACbC,QAAS,CAAE,eAAgB,wBAPP,SASCG,IAAMoI,KAAK,cAAeyI,EAAUjR,GATrC,gBASdM,EATc,EASdA,KACRiQ,EAASjQ,GACTuQ,GAAa,GAXS,kDAatBO,QAAQ7U,MAAR,MACAsU,GAAa,GAdS,0DAAH,sDAkCvB,OACE,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAMrO,GAAG,qBAAqBV,UAAU,sBAAxC,WAGA,kBAAC,GAAD,KACE,4CACCyN,IAAiB,kBAAC,EAAD,MACjBC,IAAe,kBAAC,EAAD,CAAS3N,QAAQ,UAAU2N,IAC1CrT,GAAW,kBAAC,EAAD,MACXI,GAAS,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GACpCJ,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAACuE,EAAA,EAAD,CAAMC,SAhCQ,SAACC,GACrBA,EAAEC,iBACFpB,EzB4CyB,SAACpD,GAAD,8CAAa,WAAOoD,EAAUC,GAAjB,uBAAAC,EAAA,sEAEtCF,EAAS,CACP3D,KZ/GgC,2BY4GI,EAQlC4D,IADWlC,EAPuB,EAOpCD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYtC,EAASuC,SAbA,SAiBfC,IAAMmL,IAAN,wBACJ9O,EAAQ+H,KACzB/H,EACAuD,GApBoC,gBAiB9BM,EAjB8B,EAiB9BA,KAMRT,EAAS,CAAE3D,KZlIuB,yBYkIOE,QAASkE,IAvBZ,kDAyBtCT,EAAS,CACP3D,KZpI6B,sBYqI7BE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BwB,0DAAb,wDyB3CvB6Q,CAAc,CACZ7M,IAAK+D,EACLhH,OACA4D,QACAR,QACAyL,QACAD,WACAvJ,cACAqB,oBAsBI,kBAACnH,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QACpB,kBAAC5H,EAAA,EAAK6H,MAAN,cACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOqJ,EAAQrJ,EAAES,OAAOC,WAGtC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,eACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,QACLyF,YAAY,cACZD,MAAOyD,EACP3D,SAAU,SAACR,GAAD,OAAOsP,EAAStP,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,eACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,kBACZD,MAAOiD,EACPnD,SAAU,SAACR,GAAD,OAAOuP,EAASvP,EAAES,OAAOC,UAErC,kBAACZ,EAAA,EAAKwQ,KAAN,CACE1R,GAAG,aACH+M,MAAM,cACN4E,QAAM,EACN/P,SAAUsP,KAEXF,GAAa,kBAAC,EAAD,OAEhB,kBAAC9P,EAAA,EAAK2H,MAAN,CAAYC,UAAU,SACpB,kBAAC5H,EAAA,EAAK6H,MAAN,cACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,cACZD,MAAO0O,EACP5O,SAAU,SAACR,GAAD,OAAOwP,EAASxP,EAAES,OAAOC,WAGvC,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,gBACpB,kBAAC5H,EAAA,EAAK6H,MAAN,wBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,eACLyF,YAAY,uBACZD,MAAOuG,EACPzG,SAAU,SAACR,GAAD,OAAO0P,EAAgB1P,EAAES,OAAOC,WAG9C,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,YACpB,kBAAC5H,EAAA,EAAK6H,MAAN,iBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,iBACZD,MAAOyO,EACP3O,SAAU,SAACR,GAAD,OAAOyP,EAAYzP,EAAES,OAAOC,WAG1C,kBAACZ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,eACpB,kBAAC5H,EAAA,EAAK6H,MAAN,oBACA,kBAAC7H,EAAA,EAAKQ,QAAN,CACEpF,KAAK,OACLyF,YAAY,oBACZD,MAAOkF,EACPpF,SAAU,SAACR,GAAD,OAAO2P,EAAe3P,EAAES,OAAOC,WAG7C,kBAACE,EAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,WAA9B,cCjGG2P,GAzES,SAAC,GAAiB,IAAf9Q,EAAc,EAAdA,QACnBb,EAAWoC,cACXpD,EAAYqD,aAAY,SAACnG,GAAD,OAAWA,EAAM8C,aACvC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAUR,OARA+F,qBAAU,WACJ/F,GAAYA,EAASyF,QACvBxD,EV+KoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE5BF,EAAS,CACP3D,KtBtL4B,uBsBmLF,EAQxB4D,IADWlC,EAPa,EAO1BD,UAAaC,SAGToC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYtC,EAASuC,SAZV,SAgBLC,IAAMC,IAAN,cAAyBL,GAhBpB,gBAgBpBM,EAhBoB,EAgBpBA,KAERT,EAAS,CACP3D,KtBrM4B,qBsBsM5BE,QAASkE,IApBiB,kDAuB5BT,EAAS,CACP3D,KtBzMyB,kBsB0MzBE,QACE,KAAMmE,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5Bc,0DAAN,yDU7KpBE,EAAQS,KAAK,YAEd,CAACtB,EAAUa,EAAS9C,IAGrB,kBAAC,WAAD,KACE,sCACCzB,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASsF,QAAQ,UAAUtF,GAE3B,kBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnJ,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACGlD,EAAOpB,KAAI,SAACc,GAAD,OACV,wBAAI6H,IAAK7H,EAAMkG,KACb,4BAAKlG,EAAMkG,KACX,4BAAKlG,EAAMP,MAAQO,EAAMP,KAAKwD,MAC9B,4BAAKjD,EAAM+J,UAAUC,UAAU,EAAG,KAClC,gCAAMhK,EAAM4M,YACZ,4BACG5M,EAAM6M,OACL7M,EAAM8M,OAAO9C,UAAU,EAAG,IAE1B,uBAAGxG,UAAU,eAAesC,MAAO,CAAED,MAAO,UAGhD,4BACG7F,EAAM+M,YACL/M,EAAMgN,YAAYhD,UAAU,EAAG,IAE/B,uBAAGxG,UAAU,eAAesC,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAe3B,GAAE,iBAAYlE,EAAMkG,MACjC,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,QAAQC,UAAU,UAAlC,qBC3CP2P,GAAM,WACjB,OACE,oCACE,kBAAC,EAAD,MACA,0BAAM3P,UAAU,QACd,kBAACS,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOmP,KAAK,aAAaC,UAAWpE,KACpC,kBAAC,IAAD,CAAOmE,KAAK,YAAYC,UAAW7F,KACnC,kBAAC,IAAD,CAAO4F,KAAK,WAAWC,UAAWnF,KAClC,kBAAC,IAAD,CAAOkF,KAAK,cAAcC,UAAW9E,KACrC,kBAAC,IAAD,CAAO6E,KAAK,SAASC,UAAW9H,KAChC,kBAAC,IAAD,CAAO6H,KAAK,YAAYC,UAAWvH,KACnC,kBAAC,IAAD,CAAOsH,KAAK,WAAWC,UAAWjH,KAClC,kBAAC,IAAD,CAAOgH,KAAK,eAAeC,UAAWC,KACtC,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW3I,KACpC,kBAAC,IAAD,CAAO0I,KAAK,kBAAkBC,UAAW7C,KACzC,kBAAC,IAAD,CAAO4C,KAAK,uBAAuBC,UAAWvC,KAC9C,kBAAC,IAAD,CACEsC,KAAK,qBACLC,UAAWhC,GACXkC,OAAK,IAEP,kBAAC,IAAD,CACEH,KAAK,iCACLC,UAAWhC,GACXkC,OAAK,IAEP,kBAAC,IAAD,CAAOH,KAAK,0BAA0BC,UAAWtB,KACjD,kBAAC,IAAD,CAAOqB,KAAK,mBAAmBC,UAAWH,KAC1C,kBAAC,IAAD,CAAOE,KAAK,mBAAmBG,OAAK,EAACF,UAAW3K,KAChD,kBAAC,IAAD,CAAO0K,KAAK,oBAAoBG,OAAK,EAACF,UAAW3K,KACjD,kBAAC,IAAD,CACE0K,KAAK,oCACLG,OAAK,EACLF,UAAW3K,KAEb,kBAAC,IAAD,CAAO0K,KAAK,IAAIG,OAAK,EAACF,UAAW3K,OAGrC,kBAAC,EAAD,QAKS,qBACb,kBAAC,IAAD,CAAUzH,MAAOA,GACf,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,SCpENuS,IAASjP,OAAO,kBAAC,GAAD,MAASqL,SAAS6D,eAAe,U","file":"static/js/main.43de45f1.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productContstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userContstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userContstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <Row>\r\n        <Col>\r\n          <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Products...'\r\n            // className='mr-sm-2 ml-sm-5'\r\n          ></Form.Control>\r\n        </Col>\r\n        <Col>\r\n          <Button type='submit' variant='outline-secondary' className='p-2'>\r\n            Search\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route, withRouter } from 'react-router-dom'\r\n// BootStrap\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../store/actions/userActions'\r\n\r\n// My Components\r\nimport SearchBox from '../SearchBox'\r\n\r\nconst Header = (props) => {\r\n  const { history } = props\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Econali</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; 2020 <a href='//www.thewebdev.net'>LemaTech LLC</a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productContstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_TOP_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.get('/api/products/top')\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from '../Rating';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 py-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} varian='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\nMessage.defaultProps = { variant: 'info' };\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = ' ' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Carousel, Image } from 'react-bootstrap'\r\n// My Components\r\nimport Loader from '../Loader'\r\nimport Message from '../Message'\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { listTopProducts } from '../../store/actions/productActions'\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            {/* <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} $({product.price})\r\n              </h2>\r\n            </Carousel.Caption> */}\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Econali',\r\n}\r\n\r\nexport default Meta\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Bootstrap\r\nimport { Row, Col } from 'react-bootstrap'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../../store/actions/productActions'\r\n// My Components\r\nimport Product from '../../components/Product'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport ProductCarousel from '../../components/ProductCarousel'\r\nimport Meta from '../../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Fragment>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} m2={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Bootstrap\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../../store/actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../store/constants/productContstants'\r\n// My Components\r\nimport Rating from '../../components/Rating'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Meta from '../../components/Meta'\r\n\r\nconst Product = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const { success: successProductReview, error: errorProductReview } =\r\n    productReviewCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={7}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={5}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>{product.name}</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Bootstrap\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToCart, removeFromCart } from '../../store/actions/cartActions'\r\n// My Components\r\nimport Message from '../../components/Message'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport { login } from '../../store/actions/userActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// My Components\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign in</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport { register } from '../../store/actions/userActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// My Components\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name Address</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// Redux\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from '../../store/actions/userActions'\r\nimport { listMyOrders } from '../../store/actions/orderActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// My Components\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!userDetails || !user || !user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='mt-3'>\r\n        <Col md={12}>\r\n          <h2>My Orders</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message variant='danger'>{errorOrders}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Total</th>\r\n                  <th>Paid</th>\r\n                  <th>Delivered</th>\r\n                  <th>ID</th>\r\n                  <th>...</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <tr key={order._id}>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          order.paidAt.substring(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: 'red' }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          order.deliveredAt.substring(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: 'red' }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>{order._id}</td>\r\n\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button className='btn-sm' variant='light'>\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  </LinkContainer>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row className='my-5'>\r\n        <Col md={4}>\r\n          <h2>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name Address</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../../store/actions/cartActions'\r\n\r\n// My Components\r\nimport FormContainer from '../../components/FormContainer'\r\nimport CheckoutSteps from '../../components/CheckoutSteps/index'\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='Address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='city'\r\n            placeholder='City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='postalCode'\r\n            placeholder='Postal Code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='country'\r\n            placeholder='Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react';\r\n\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePaymentMethod } from '../../store/actions/cartActions';\r\n\r\n// My Components\r\nimport FormContainer from '../../components/FormContainer';\r\nimport CheckoutSteps from '../../components/CheckoutSteps/index';\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'> Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../../store/actions/orderActions';\r\n\r\n// My Components\r\nimport Message from '../../components/Message';\r\nimport CheckoutSteps from '../../components/CheckoutSteps/index';\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //   Calculate Prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  //   Shipping Price is very basic right now\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  // Tax price\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../../store/actions/orderActions'\r\n\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../../store/constants/orderConstants'\r\n\r\n// My Components\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || order._id !== orderId || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo, history])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Fragment>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={7}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Awaiting Payment</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Awaiting Payment</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order ? (\r\n                <>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Order is empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((item, index) => (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {item.qty} x ${item.price} = $\r\n                              {item.qty * item.price}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </>\r\n              ) : null}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={5}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listUsers, deleteUser } from '../../store/actions/userActions';\r\n\r\n// My Components\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto: ${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n// Redux\r\nimport { getUserDetails, updateUser } from '../../store/actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { USER_UPDATE_RESET } from '../../store/constants/userContstants'\r\n\r\n// My Components\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name </Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../../store/actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../../store/constants/productContstants'\r\n\r\n// My Components\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_RESET,\r\n    })\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      // Delete products\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    //   Create Product\r\n    dispatch(createProduct())\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Fragment>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from '../../store/actions/productActions'\r\n\r\n// My Components\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET } from '../../store/constants/productContstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n    try {\r\n      const config = {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name </Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price </Form.Label>\r\n              <Form.Control\r\n                type='price'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image </Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock </Form.Label>\r\n              <Form.Control\r\n                type='countInStock'\r\n                placeholder='Enter Count in Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { Fragment, useEffect } from 'react';\r\n\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listOrders } from '../../store/actions/orderActions';\r\n\r\n// My Components\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React, { Fragment } from 'react'\r\nimport './App.css'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n// My Components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport ScrollToTop from './components/ScrollToTop'\r\n// My Screens\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n// Redux\r\nimport store from './store/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' exact component={HomeScreen} />\r\n          <Route path='/page/:pageNumber' exact component={HomeScreen} />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            exact\r\n            component={HomeScreen}\r\n          />\r\n          <Route path='/' exact component={HomeScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default () => (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <ScrollToTop />\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}